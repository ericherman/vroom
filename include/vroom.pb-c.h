/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: vroom.proto */

#ifndef PROTOBUF_C_vroom_2eproto__INCLUDED
#define PROTOBUF_C_vroom_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Reply Reply;
typedef struct _CreateScene CreateScene;
typedef struct _DestroyScene DestroyScene;
typedef struct _CreateDataObject CreateDataObject;
typedef struct _DestroyDataObject DestroyDataObject;
typedef struct _CreateGeometryObject CreateGeometryObject;
typedef struct _CreateColorMesh CreateColorMesh;
typedef struct _CreateTextureMesh CreateTextureMesh;


/* --- enums --- */

typedef enum _CreateDataObject__Type {
  CREATE_DATA_OBJECT__TYPE__UV = 0,
  CREATE_DATA_OBJECT__TYPE__COLOR = 1,
  CREATE_DATA_OBJECT__TYPE__TEXTURE = 2,
  CREATE_DATA_OBJECT__TYPE__VERTEX = 3,
  CREATE_DATA_OBJECT__TYPE__NORMAL = 4,
  CREATE_DATA_OBJECT__TYPE__INDEX = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CREATE_DATA_OBJECT__TYPE)
} CreateDataObject__Type;

/* --- messages --- */

struct  _Reply
{
  ProtobufCMessage base;
  int32_t id;
  int32_t error_code;
};
#define REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&reply__descriptor) \
    , 0, 0 }


struct  _CreateScene
{
  ProtobufCMessage base;
  char *name;
};
#define CREATE_SCENE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_scene__descriptor) \
    , NULL }


struct  _DestroyScene
{
  ProtobufCMessage base;
  int32_t id;
};
#define DESTROY_SCENE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&destroy_scene__descriptor) \
    , 0 }


struct  _CreateDataObject
{
  ProtobufCMessage base;
  int32_t scene_id;
  CreateDataObject__Type type;
  int32_t shm_fd;
  int32_t dtype;
  int32_t offset;
  int32_t size;
  int32_t stride;
};
#define CREATE_DATA_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_data_object__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _DestroyDataObject
{
  ProtobufCMessage base;
  int32_t scene_id;
  int32_t id;
};
#define DESTROY_DATA_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&destroy_data_object__descriptor) \
    , 0, 0 }


struct  _CreateGeometryObject
{
  ProtobufCMessage base;
  int32_t scene_id;
  int32_t vertex_id;
  int32_t normal_id;
  int32_t index_id;
};
#define CREATE_GEOMETRY_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_geometry_object__descriptor) \
    , 0, 0, 0, 0 }


struct  _CreateColorMesh
{
  ProtobufCMessage base;
  int32_t scene_id;
  int32_t geometry_id;
  float r;
  float g;
  float b;
  float a;
};
#define CREATE_COLOR_MESH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_color_mesh__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _CreateTextureMesh
{
  ProtobufCMessage base;
  int32_t scene_id;
  int32_t geometry_id;
  int32_t uv_id;
  int32_t texture_id;
};
#define CREATE_TEXTURE_MESH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&create_texture_mesh__descriptor) \
    , 0, 0, 0, 0 }


/* Reply methods */
void   reply__init
                     (Reply         *message);
size_t reply__get_packed_size
                     (const Reply   *message);
size_t reply__pack
                     (const Reply   *message,
                      uint8_t             *out);
size_t reply__pack_to_buffer
                     (const Reply   *message,
                      ProtobufCBuffer     *buffer);
Reply *
       reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   reply__free_unpacked
                     (Reply *message,
                      ProtobufCAllocator *allocator);
/* CreateScene methods */
void   create_scene__init
                     (CreateScene         *message);
size_t create_scene__get_packed_size
                     (const CreateScene   *message);
size_t create_scene__pack
                     (const CreateScene   *message,
                      uint8_t             *out);
size_t create_scene__pack_to_buffer
                     (const CreateScene   *message,
                      ProtobufCBuffer     *buffer);
CreateScene *
       create_scene__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_scene__free_unpacked
                     (CreateScene *message,
                      ProtobufCAllocator *allocator);
/* DestroyScene methods */
void   destroy_scene__init
                     (DestroyScene         *message);
size_t destroy_scene__get_packed_size
                     (const DestroyScene   *message);
size_t destroy_scene__pack
                     (const DestroyScene   *message,
                      uint8_t             *out);
size_t destroy_scene__pack_to_buffer
                     (const DestroyScene   *message,
                      ProtobufCBuffer     *buffer);
DestroyScene *
       destroy_scene__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   destroy_scene__free_unpacked
                     (DestroyScene *message,
                      ProtobufCAllocator *allocator);
/* CreateDataObject methods */
void   create_data_object__init
                     (CreateDataObject         *message);
size_t create_data_object__get_packed_size
                     (const CreateDataObject   *message);
size_t create_data_object__pack
                     (const CreateDataObject   *message,
                      uint8_t             *out);
size_t create_data_object__pack_to_buffer
                     (const CreateDataObject   *message,
                      ProtobufCBuffer     *buffer);
CreateDataObject *
       create_data_object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_data_object__free_unpacked
                     (CreateDataObject *message,
                      ProtobufCAllocator *allocator);
/* DestroyDataObject methods */
void   destroy_data_object__init
                     (DestroyDataObject         *message);
size_t destroy_data_object__get_packed_size
                     (const DestroyDataObject   *message);
size_t destroy_data_object__pack
                     (const DestroyDataObject   *message,
                      uint8_t             *out);
size_t destroy_data_object__pack_to_buffer
                     (const DestroyDataObject   *message,
                      ProtobufCBuffer     *buffer);
DestroyDataObject *
       destroy_data_object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   destroy_data_object__free_unpacked
                     (DestroyDataObject *message,
                      ProtobufCAllocator *allocator);
/* CreateGeometryObject methods */
void   create_geometry_object__init
                     (CreateGeometryObject         *message);
size_t create_geometry_object__get_packed_size
                     (const CreateGeometryObject   *message);
size_t create_geometry_object__pack
                     (const CreateGeometryObject   *message,
                      uint8_t             *out);
size_t create_geometry_object__pack_to_buffer
                     (const CreateGeometryObject   *message,
                      ProtobufCBuffer     *buffer);
CreateGeometryObject *
       create_geometry_object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_geometry_object__free_unpacked
                     (CreateGeometryObject *message,
                      ProtobufCAllocator *allocator);
/* CreateColorMesh methods */
void   create_color_mesh__init
                     (CreateColorMesh         *message);
size_t create_color_mesh__get_packed_size
                     (const CreateColorMesh   *message);
size_t create_color_mesh__pack
                     (const CreateColorMesh   *message,
                      uint8_t             *out);
size_t create_color_mesh__pack_to_buffer
                     (const CreateColorMesh   *message,
                      ProtobufCBuffer     *buffer);
CreateColorMesh *
       create_color_mesh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_color_mesh__free_unpacked
                     (CreateColorMesh *message,
                      ProtobufCAllocator *allocator);
/* CreateTextureMesh methods */
void   create_texture_mesh__init
                     (CreateTextureMesh         *message);
size_t create_texture_mesh__get_packed_size
                     (const CreateTextureMesh   *message);
size_t create_texture_mesh__pack
                     (const CreateTextureMesh   *message,
                      uint8_t             *out);
size_t create_texture_mesh__pack_to_buffer
                     (const CreateTextureMesh   *message,
                      ProtobufCBuffer     *buffer);
CreateTextureMesh *
       create_texture_mesh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   create_texture_mesh__free_unpacked
                     (CreateTextureMesh *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Reply_Closure)
                 (const Reply *message,
                  void *closure_data);
typedef void (*CreateScene_Closure)
                 (const CreateScene *message,
                  void *closure_data);
typedef void (*DestroyScene_Closure)
                 (const DestroyScene *message,
                  void *closure_data);
typedef void (*CreateDataObject_Closure)
                 (const CreateDataObject *message,
                  void *closure_data);
typedef void (*DestroyDataObject_Closure)
                 (const DestroyDataObject *message,
                  void *closure_data);
typedef void (*CreateGeometryObject_Closure)
                 (const CreateGeometryObject *message,
                  void *closure_data);
typedef void (*CreateColorMesh_Closure)
                 (const CreateColorMesh *message,
                  void *closure_data);
typedef void (*CreateTextureMesh_Closure)
                 (const CreateTextureMesh *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor reply__descriptor;
extern const ProtobufCMessageDescriptor create_scene__descriptor;
extern const ProtobufCMessageDescriptor destroy_scene__descriptor;
extern const ProtobufCMessageDescriptor create_data_object__descriptor;
extern const ProtobufCEnumDescriptor    create_data_object__type__descriptor;
extern const ProtobufCMessageDescriptor destroy_data_object__descriptor;
extern const ProtobufCMessageDescriptor create_geometry_object__descriptor;
extern const ProtobufCMessageDescriptor create_color_mesh__descriptor;
extern const ProtobufCMessageDescriptor create_texture_mesh__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_vroom_2eproto__INCLUDED */
